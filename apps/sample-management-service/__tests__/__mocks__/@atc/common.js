// Auto-generated mock file for @atc/common
module.exports = {
  errorMessage: {
    DATE: {
      DATE_BEFORE_START: 'Date Before Start',
      INVALID_DATE: 'Invalid Date',
      PAST_DATE: 'Past Date',
      PAST_DATE_END_DATE: 'Past Date End Date',
    },
    OTHER: {
      FILL_REQUIRED_FIELD: 'Fill Required Field',
      INVALID_MIME_TYPE: 'Invalid Mime Type',
      SOMETHING_WENT_WRONG: 'Something Went Wrong',
    },
    PRODUCT: {
      NOT_FOUND: 'Not Found',
    },
    SAMPLE: {
      ANSWER_TYPE_REQUIRED: 'Answer Type Required',
      DESCRIPTION_REQUIRED: 'Description Required',
      DESCRIPTION_TO_GET_PRODUCT_REQUIRED: 'Description To Get Product Required',
      FAILED_TO_CREATE: 'Failed To Create',
      FAILED_TO_REVIEW: 'Failed To Review',
      FAILED_TO_SUBMIT_ANSWERS: 'Failed To Submit Answers',
      ID_REQUIRED: 'Id Required',
      INQUIRIES_REQUIRED: 'Inquiries Required',
      INSUFFICIENT_OPTIONS: 'Insufficient Options',
      INVALID_AGE: 'Invalid Age',
      INVALID_GENDER: 'Invalid Gender',
      INVALID_LIMIT: 'Invalid Limit',
      INVALID_LOCATION: 'Invalid Location',
      INVALID_OPTION_ID: 'Invalid Option Id',
      INVALID_PAGE: 'Invalid Page',
      INVALID_STATE: 'Invalid State',
      MAXIMUM_RATING: 'Maximum Rating',
      MAXIMUM_RESPONSE: 'Maximum Response',
      MAXIMUM_SAMPLE_REQUIRED: 'Maximum Sample Required',
      MAX_LENGTH: 'Max Length',
      MAX_LENGTH_FOR_MAXIMUM_SAMPLE: 'Max Length For Maximum Sample',
      MAX_QUESTION: 'Max Question',
      MINIMUM_COMMENT_LENGTH: 'Minimum Comment Length',
      MINIMUM_RATING: 'Minimum Rating',
      MIN_LENGTH: 'Min Length',
      MIN_QUESTION: 'Min Question',
      MULTI_ANSWER_REQUIRED: 'Multi Answer Required',
      NOT_FOUND: 'Not Found',
      NO_DATA_NEEDED: 'No Data Needed',
      OPTION_MAX_REQUIRED: 'Option Max Required',
      OPTION_MIN_REQUIRED: 'Option Min Required',
      OPTION_NOT_ALLOWED_FOR_TEXT: 'Option Not Allowed For Text',
      OPTION_NOT_FOUND: 'Option Not Found',
      OPTION_REQUIRED: 'Option Required',
      QUESTION_NOT_FOUND: 'Question Not Found',
      QUESTION_REQUIRED: 'Question Required',
      REQUIRED: 'Required',
      SHOULD_NOT_FUTURE_DATE: 'Should Not Future Date',
      SHOULD_NOT_LESS_THAT_START_DATE: 'Should Not Less That Start Date',
      SINGLE_ANSWER_REQUIRED: 'Single Answer Required',
      TASK_TO_DO_REQUIRED: 'Task To Do Required',
      USED_IN_WIDGET: 'Used In Widget',
    },
    USER: {
      NOT_FOUND: 'Not Found',
    },
  },
  responseMessage: {
    EMAIL: {
      MAIL_SENT: 'Mail Sent successfully',
    },
    OTHER: {
      DATA_FOUND: 'Data Found successfully',
      DATA_NOT_FOUND: 'Data Not Found successfully',
    },
    SAMPLE: {
      CREATED: 'Created successfully',
      DELETED: 'Deleted successfully',
      DISABLED: 'Disabled successfully',
      ENABLED: 'Enabled successfully',
      PUBLISHED: 'Published successfully',
      RETRIEVED: 'Retrieved successfully',
      REVIEW_ADDED: 'Review Added successfully',
      REVIEW_RETRIVED: 'Review Retrived successfully',
      STATUS_RETRIEVED: 'Status Retrieved successfully',
      SUBMITTED: 'Submitted successfully',
      UPDATED: 'Updated successfully',
    },
  },
  UserRoleEnum: {
    ADMIN: 'ADMIN',
    USER: 'USER',
  },
  ChartType: {
    MONTHLY: 'MONTHLY',
    WEEKLY: 'WEEKLY',
    YEARLY: 'YEARLY',
  },
  utilFns: jest.fn(),
};
