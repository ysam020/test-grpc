syntax = "proto3";
package auth;

import "../user/user.proto";
import "../health/health.proto";
import "../product/product.proto";

// register user
message RegisterUserRequest {
    string email = 1;
    string password = 2;
}

message RegisterUserResponse {
    string message = 1;
    int32 status = 2;
    string token = 3;
}

// verify user
message VerifyUserRequest {
    string token = 1;
    int32 otp = 2;
}

message VerifyUserResponse {
    User data = 1;
    string accessToken = 2;
    string refreshToken = 3;
    string message = 4;
    int32 status = 5;
}

// resend email
message ResendEmailRequest {
    string email = 1;
}

message ResendEmailResponse {
    string message = 1;
    int32 status = 2;
    string token = 3;
}

// login user
message LoginUserRequest {
    string email = 1;
    string password = 2;
    string role = 3;
}

message UserData {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    bool sample_registered = 5;
}

message LoginUserResponse {
    UserData data = 1;
    string accessToken = 2;
    string refreshToken = 3;
    string message = 4;
    int32 status = 5;
}

// forgot password
message ForgotPasswordRequest {
    string email = 1;
}

message ForgotPasswordResponse {
    string message = 1;
    int32 status = 2;
    string token = 3;
}

// reset password
message ResetPasswordRequest {
    string token = 1;
    string password = 2;
    int32 otp = 3;
}

message ResetPasswordResponse {
    string message = 1;
    int32 status = 2;
}

message RefreshTokenRequest {
    string refresh_token = 1;
}

message RefreshTokenResponse {
    string accessToken = 1;
    string refreshToken = 2;
    string message = 3;
    int32 status = 4;
}

// oauth register
message OauthRegisterRequest {
    string token = 1;
    string authProvider = 2;
    string userId = 3;
    string fcmToken = 4;
}

// auth service definition
service AuthService {
    rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);
    rpc VerifyUser (VerifyUserRequest) returns (VerifyUserResponse);
    rpc ResendEmail (ResendEmailRequest) returns (ResendEmailResponse);
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse);
    rpc ForgotPassword (ForgotPasswordRequest) returns (ForgotPasswordResponse);
    rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordResponse);
    rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
    rpc OauthRegister (OauthRegisterRequest) returns (LoginUserResponse);
}
