services:
    api-gateway:
        container_name: api-gateway
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            args:
                - PROJECT=api-gateway-service
                - PORT=50051
        environment:
            - AUTH_SERVICE_HOST=auth-management-service
            - PRODUCT_SERVICE_HOST=product-management-service
            - USER_SERVICE_HOST=user-management-service
            - WIDGET_SERVICE_HOST=widget-management-service
            - SURVEY_SERVICE_HOST=survey-management-service
            - NOTIFICATION_SERVICE_HOST=notification-management-service
            - SAMPLE_SERVICE_HOST=sample-management-service
            - CATALOGUE_SERVICE_HOST=catalogue-management-service
        ports:
            - '50051:50051'
        env_file: .env

    auth-management-service:
        container_name: auth-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            args:
                - PROJECT=auth-management-service
                - PORT=50052
        environment:
            - USER_SERVICE_HOST=user-management-service
            - NOTIFICATION_SERVICE_HOST=notification-management-service
        env_file: .env

    user-management-service:
        container_name: user-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=user-management-service
                - PORT=50053
        env_file: .env

    product-management-service:
        container_name: product-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=product-management-service
                - PORT=50054
        environment:
            - CATALOGUE_SERVICE_HOST=catalogue-management-service
        env_file: .env

    widget-management-service:
        container_name: widget-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=widget-management-service
                - PORT=50056
        environment:
            - SURVEY_SERVICE_HOST=survey-management-service
            - SAMPLE_SERVICE_HOST=sample-management-service
        env_file: .env

    survey-management-service:
        container_name: survey-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=survey-management-service
                - PORT=50057
        environment:
            - USER_SERVICE_HOST=user-management-service
            - WIDGET_SERVICE_HOST=widget-management-service
        env_file: .env

    notification-management-service:
        container_name: notification-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=notification-management-service
                - PORT=50058
        environment:
            - USER_SERVICE_HOST=user-management-service
        env_file: .env

    sample-management-service:
        container_name: sample-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=sample-management-service
                - PORT=50059
        environment:
            - USER_SERVICE_HOST=user-management-service
            - PRODUCT_SERVICE_HOST=product-management-service
            - WIDGET_SERVICE_HOST=widget-management-service
        env_file: .env

    catalogue-management-service:
        container_name: catalogue-management-service
        build:
            context: .
            dockerfile: ./docker/base.Dockerfile
            no_cache: true
            args:
                - PROJECT=catalogue-management-service
                - PORT=50060
        environment:
            - PRODUCT_SERVICE_HOST=product-management-service
        env_file: .env
